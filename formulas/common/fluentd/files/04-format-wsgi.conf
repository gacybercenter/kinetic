<filter openstack.wsgi.access>
  @type parser
  reserve_data true
  key_name Payload
  <parse>
    @type grok
    grok_pattern %{IPORHOST:clientip} (?:%{HTTPDUSER:ident}|-) (?:%{USER:auth}|-) \[%{HTTPDATE:Timestamp}\] "(?:%{WORD:http_method} %{NOTSPACE:http_url}(?: HTTP/%{NUMBER:http_version})?|%{DATA:rawrequest})" %{NUMBER:http_status} (?:%{NUMBER:http_bytes}|-) (?:%{NUMBER:http_response_time_us}|"%{DATA:Payload}") (?:%{QS:agent}|"-")
    time_key Timestamp
    time_format %d/%b/%Y:%H:%M:%S %z
    keep_time_key true
  </parse>
</filter>
<filter openstack.wsgi.error>
  @type parser
  reserve_data true
  key_name Payload
  <parse>
    @type grok
    grok_pattern \[%{DATA:day}%{SYSLOGTIMESTAMP:timestamp} %{DATA:year}\] \[%{DATA:component}\] \[pid %{DATA:pid}\:tid %{DATA:tid}\] ((?:\[remote %{IP:remote}:%{DATA:port}\] %{GREEDYDATA:message})|(?:%{GREEDYDATA:Payload}))
    time_key Timestamp
    time_format %d/%b/%Y:%H:%M:%S %z
    keep_time_key true
  </parse>
</filter>
<filter openstack.wsgi.**>
  @type record_transformer
  <record>
    Hostname {{ hostname }}
    Logger ${tag_parts[0]}.${tag_parts[1]}
    programname ${tag_parts[1]}.${tag_parts[2]}
  </record>
</filter>