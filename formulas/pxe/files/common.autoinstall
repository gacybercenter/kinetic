#cloud-config
autoinstall:
  version: 1
  early-commands:
    - |
      vgs --separator=: --noheadings | cut -f1 -d: | while read vg ; do vgchange -an $vg ; done
      pvs --separator=: --noheadings | cut -f1 -d: | while read pv ; do pvremove -ff -y $pv ; done
      fdisk -l | grep 'Disk /dev/sd' | cut -f1 -d: | cut -f2 -d' ' | while read disk ; do mdadm --zero-superblock $disk ; done
      fdisk -l | grep 'Disk /dev/nvme' | cut -f1 -d: | cut -f2 -d' ' | while read disk ; do mdadm --zero-superblock $disk ; done
      fdisk -l | grep 'Disk /dev/sd' | cut -f1 -d: | cut -f2 -d' ' | while read disk ; do dd if=/dev/zero of=$disk bs=1M count=512 ; done
      fdisk -l | grep 'Disk /dev/nvme' | cut -f1 -d: | cut -f2 -d' ' | while read disk ; do dd if=/dev/zero of=$disk bs=1M count=512 ; done
  locale: en_US
  identity:
    username: root
    hostname: {{ type }}-{{ targets[id]['uuid'] }}
    password: {{ pillar['hosts'][type]['root_password_crypted'] }}
  network:
    version: 2
    ethernets:
      {{ pillar['hosts'][type]['interface'] }}:
        dhcp4: true
  resize_rootfs: true
  growpart:
    mode: auto
  storage:
    layout:
      name: lvm
      sizing-policy: all
      match:
        model: "{{ pillar['hosts'][type]['disk'] }}"
    swap:
      swap: 8G
  proxy: {{ pillar['hosts'][type]['proxy'] }}
  user-data:
    disable_root: false
  late-commands:
    - curtin in-target --target /target -- curl -L -o /tmp/bootstrap_salt.sh https://bootstrap.saltstack.com
    - curtin in-target --target /target -- /bin/sh /tmp/bootstrap_salt.sh -x python3 -X -A {{ pillar['salt']['record'] }} stable {{ salt['pillar.get']('salt:version', 'latest') }}
  